I have yet to pick a license agreement and won't commit to any until I make this repo public -- the MIT one shown before was really just a placeholder that came from a cookiecutter python project template. As no one can see this repo besides me, I don't see any harm in waiting until I'm ready to share the project with others (going Private to Public on github). They may be able to look back at these original commits, but I'd assume any code in past commits will be under the same restrictions as the release-day license that I choose. Here is what I'm considering now...

Most popular python packages (such as Numpy, Scipy, Pandas) follow the BSD-3 license and it is the best option if I want minimal restrictions on my code. I would pick this over the MIT or Apache licenses if I had to choose now. On the other hand, I may want to restrict future works that try to spin off of this repo to make a profit. This codebase is extremely high-level and therefore close to what a marketed project would be. In fact, I may even try to profit off the repo or alternatively use it as a source of self-funding for the repo development -- I envision a number of ways where profits can be made off this code (such as simply linking to Sigma/Fischer webpages when proposing raw materials needed for a synthesis or maybe even teaming up with ICSD by wrapping their database while keeping such access behind user permissions, effectively advertising for other paid products). The counter argument against this is that such a license (like GNU General Public License) may complicate how user contributions work and cause a lot of headache down the road. 
